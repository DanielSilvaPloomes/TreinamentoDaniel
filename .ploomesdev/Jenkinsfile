pipeline {
    agent { label 'linux' }
    environment {
        DOCKER_HOME = tool 'docker'
        PLOOMESDEV_HOME = '/ploomesdev'
        PATH = "$DOCKER_HOME/bin:$PLOOMESDEV_HOME/bin:$PATH"
        ACR_SERVER = 'https://ploomes.azurecr.io'
        ROOT_PATH = pwd()
    }
    stages {
        stage('Checkout repository') { 
            steps { 
                checkout scm 
            } 
        }
        stage('Run pipelines assynchronously') { 
            parallel {
                stage('[TesteKubernets]') {
                    when { branch pattern: '^.*$', comparator: 'REGEXP' }
                    stages {
                        stage('[TesteKubernets] Run Build') {
                            steps {
                                withCredentials([usernamePassword(
                                    credentialsId: 'github-ploomesdevbot-pat',
                                    usernameVariable: 'GH_NUGET_USER',
                                    passwordVariable: 'GH_NUGET_TOKEN'
                                )])
                                {
                                    sh "ploomesdev --test-image --branch $GIT_BRANCH --project TesteKubernets --no-colors build --silence"
                                    sh "ploomesdev --test-image --debug-image --branch $GIT_BRANCH --project TesteKubernets --no-colors build --silence"
                                }
                            }
                        }
                        stage('[TesteKubernets] Publish Test Images') {
                            steps {
                                withCredentials([azureServicePrincipal(
                                    credentialsId: 'azure-sp',
                                    clientIdVariable: 'AZURE_CLIENT_ID',
                                    clientSecretVariable: 'AZURE_CLIENT_SECRET',
                                    tenantIdVariable: 'AZURE_TENANT_ID'
                                )])
                                {
                                    sh "docker login -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET $ACR_SERVER"
                                    sh "ploomesdev --test-image --branch $GIT_BRANCH --project TesteKubernets --no-colors publish -y"
                                    sh "ploomesdev --test-image --debug-image --branch $GIT_BRANCH --project TesteKubernets --no-colors publish -y"
                                }
                            }
                        }
                        stage('[TesteKubernets] Run Tests') {
                            steps {
                                sh "ploomesdev --test-image --branch $GIT_BRANCH --project TesteKubernets --no-colors test"
                                sh "ploomesdev --test-image --debug-image --branch $GIT_BRANCH --project TesteKubernets --no-colors test"
                            }
                        }
                        stage('[TesteKubernets] Publish Approved Images') {
                            steps {
                                withCredentials([azureServicePrincipal(
                                    credentialsId: 'azure-sp',
                                    clientIdVariable: 'AZURE_CLIENT_ID',
                                    clientSecretVariable: 'AZURE_CLIENT_SECRET',
                                    tenantIdVariable: 'AZURE_TENANT_ID'
                                )])
                                {
                                    script {
                                        String docker_image = "${'TesteKubernets'.toLowerCase()}:${GIT_BRANCH.toLowerCase()}"
                                        for (mode in ['development', 'debug'])
                                        {
                                            sh 'docker tag ' +
                                                "\$(echo ${docker_image} | sed 's/_/--/g' -)-${mode}-test " +
                                                "\$(echo ${docker_image} | sed 's/_/--/g' -)-${mode} "
                                        }
                                    }
                                    sh "docker login -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET $ACR_SERVER"
                                    sh "ploomesdev --branch $GIT_BRANCH --project TesteKubernets --no-colors publish -y"
                                    sh "ploomesdev --debug-image --branch $GIT_BRANCH --project TesteKubernets --no-colors publish -y"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            withCredentials([string(credentialsId: 'discord-bot-token', variable: 'DISCORD_TOKEN')])
            {
                script {
                    sh "python3 $PLOOMESDEV_HOME/utility/discord_send_message.py '${DISCORD_TOKEN}' 'Daniel Silva' '${currentBuild.currentResult}' '$BUILD_DISPLAY_NAME' '$RUN_DISPLAY_URL' '$JOB_NAME' '$JOB_DISPLAY_URL' '${scm.userRemoteConfigs[0].url}' '$GIT_BRANCH'"
                }
            }
        }
    }
}
